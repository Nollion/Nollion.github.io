<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo小站搭建</title>
      <link href="/2019/10/16/hexo-build-up/"/>
      <url>/2019/10/16/hexo-build-up/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>　　其实平时自己并不怎么写文章，不过有看到一些东西会做笔记的习惯，但是每次写的东西都会到处放，不好找，所以想着自己搭建一个人博客网站。hexo比较平民化，并且能使用的主题也很多，所以就用它啦~<br>　　自己搭建完了也写一篇文章总结下，方便以后有需要看看。（.ps：本小站是在Windows系统下搭建）</p><h2 id="安装Git-Bash"><a href="#安装Git-Bash" class="headerlink" title="安装Git Bash"></a>安装Git Bash</h2><p>　　Windows：到git官网上下载，<a href="https://gitforwindows.org/" target="_blank" rel="noopener">Download git</a> (附链接)。<br>　　安装步骤：双击下载好的.exe文件，一直next就行了，安装完后会有一个Git Bash的命令行工具。<br>　　安装好后：打开Git Bash，键入命令 <font color="red">git –version</font> 来查看一下版本，用来确认是否安装成功。</p><h2 id="安装NodeJs"><a href="#安装NodeJs" class="headerlink" title="安装NodeJs"></a>安装NodeJs</h2><p>　　Windows：到Node.js官网上下载，<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Download NodeJs</a> (附链接)。<br>　　安装步骤：双击下载好.msi文件，也是一路next就行了，最好在Custom Setup这一步选择 <font color="blue">Add to PATH</font> 。<br>　　安装完后：打开命令行，键入命令 <font color="red">node -v</font> 来查看一下版本，用来确认是否安装成功。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>　　前面Git和NodeJs安装好后，就可以安装hexo了。先创建一个文件夹blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键Git Bash打开）。<br>　　键入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>　　安装完成后：键入命令 <font color="red">hexo -v</font> 来查看一下版本，用来确认是否安装成功。</p><p>　　然后初始化hexo，键入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>　　初始化完成后，打开所在的文件夹可以看到以下文件夹等：</p><div class="note no-icon">            <p>　　<em>node_modules: 依赖包<br>　　public：存放生成的页面<br>　　scaffolds：生成文章的一些模板<br>　　source：用来存放你的文章<br>　　themes：主题<br>　　config.yml: 博客的配置文件<br>　　db.json：source解析所得到的<br>　　package.json：项目所需模块项目的配置信息</em></p>          </div><p>　　此时，键入命令打开hexo服务就可以生成博客了。<br>　　输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>　　在浏览器输入localhost:4000就可以看到你生成的博客啦（如果没有也没关系，往下看就行了），可以使用crtl+c把服务关掉。(.ps：不过这只是在本地噢，要想生成线上的，还需要接下来的步骤。)</p><h2 id="生成SSH并添加到github"><a href="#生成SSH并添加到github" class="headerlink" title="生成SSH并添加到github"></a>生成SSH并添加到github</h2><p>　　首先，你先要有一个GitHub账户，没有的话去注册一个吧。注册完登录后，在github.com中鼠标移至『<strong>＋</strong>』看到一个New repository，新建仓库。<br>　　创建一个和你用户名相同的仓库，名称为yourname.github.io, 其中yourname是你的github名称。点击create repository后，回到git bash中，配置github账户信息（YourName和YourEail都替换成你自己的）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "yourname"</span><br><span class="line">git config --global user.email "youremail"</span><br></pre></td></tr></table></figure><p>　　怕自己输错的可以键入命令检查一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>　　确认没错后，创建SSH，一路回车：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "youremail"</span><br></pre></td></tr></table></figure><p>　　然后按输出的路径找到id_rsa.pub文件，一般在C:\Users\user(用户名).ssh目录下。用编辑器打开<strong><font color="red">rsa.pub</font></strong>文件，将里面的内容复制到github<strong><font color="red">设置</font></strong>中的<strong><font color="red">SSH and GPG keys</font></strong>。<br>　　添加一个 New SSH key ，title随便取，key就填刚刚那一段。<br>　　在git bash中验证是否添加成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="部署项目并上传到github"><a href="#部署项目并上传到github" class="headerlink" title="部署项目并上传到github"></a>部署项目并上传到github</h2><p>　　打开你的blog项目，修改_config.yml站点文件的一些配置，YourgithubName就是你的GitHub账户(另外要注意冒号之后都是有一个半角空格的)：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>　　回到gitbash中，进入你的blog目录，安装deploy-git，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>　　然后分别执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><div class="note no-icon">            <p>　　<em>hexo clean清除了你之前生成的东西，也可以不加。<br>　　hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写<br>　　hexo deploy 部署文章，可以用hexo d缩写<br>　　注意deploy时可能要你输入username和password</em></p>          </div><p>　　在浏览器中输入 <em><a href="http://yourgithubname.github.io" target="_blank" rel="noopener">http://yourgithubname.github.io</a></em> 就可以看到你的个人博客啦，是不是很兴奋！<br>　　至此，小站就搭建完成啦，如果不想绑定个人域名的，可以自行跳到『<font color="black"><strong>修改及配置主题</strong></font>』，查看如何进行修改及配置主题。</p><h2 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h2><p>　　第一步，注册阿里云账户，在阿里云上买一个域名，各个后缀的价格不太一样，比如最广泛的.com就较贵。<br>　　第二步，添加CNAME，在项目的source文件夹下新建一个名为CNAME的文件，没有后缀名。在里面添加你购买的域名，比如我添加的是leedv.site，只能添加一个哦。(.ps：可以创建个.txt文件，键入内容后把后缀名删掉。)<br>　　第三步，在阿里云 <font color="red"><strong>域名控制台</strong></font>  中，找到你购买的域名。点 <font color="red"><strong>解析</strong></font> 进去，添加解析(两条)。</p><div class="note no-icon">            <p>　　<em>记录类型均为 <strong>A</strong><br>　　主机类型为 <strong>＠</strong> 以及 <strong>www</strong><br>　　解析线路为 <strong>默认</strong><br>　　记录值为 <strong>自己的博客 ip 地址</strong><br>　　(博客ip地址可通过ping命令获得，在cmd命令行中输入 ping yourgithubname.github.io 即可获得 ip 地址)</em></p>          </div><p>　　第四步，登录GitHub，进入之前创建的仓库，点击settings，设置 Custom domain ，输入你的域名 leedv.site 。<br>　　最后，在gitbash中，分别输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>　　部署完之后，打开浏览器，输入自己的域名，就可以看到搭建的网站博客啦！<br>　　至此，hexo小站搭建完成。</p><h2 id="安装-butterfly-主题"><a href="#安装-butterfly-主题" class="headerlink" title="安装 butterfly 主题"></a>安装 butterfly 主题</h2><p>　　hexo初始化之后默认的主题是landscape，当然，如果想要更换自己喜欢的主题，可以去<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官网</a>挑选，在github中搜索你要的主题名称，里面都会有该主题的如何使用的介绍，按着来就好了，反正就是改改改！我选的是 <font color="red"><strong>butterfly</strong></font> 。<br>　　在博客根目录安装主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><p>　　安装渲染器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-jade hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>　　修改hexo配置文件_config.yml，把主题改为Butterfly</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">Butterfly</span></span><br></pre></td></tr></table></figure><p>　　其余配置请参考主题的<a href="https://docs.jerryc.me/" target="_blank" rel="noopener">配置文档</a>(附链接)，里面很详细，不用担心！(.ps：文档中所说的butterfly.xml其实就是Butterfly文件中的_config.yml，大家放心去用吧 :) )</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>　　卡住了就让卡住吧，休息一会儿你会发现新大陆的。</p>]]></content>
      
      
      <categories>
          
          <category> 小站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo小站 </tag>
            
            <tag> 小站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo小站搭建</title>
      <link href="/2019/10/14/hexo-build/"/>
      <url>/2019/10/14/hexo-build/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>　　其实平时自己并不怎么写文章，不过有看到一些东西会做笔记的习惯，但是每次写的东西都会到处放，不好找，所以想着自己搭建一个人博客网站。hexo比较平民化，并且能使用的主题也很多，所以就用它啦~<br>　　自己搭建完了也写一篇文章总结下，方便以后有需要看看。（.ps：本小站是在Windows系统下搭建）</p><h2 id="安装Git-Bash"><a href="#安装Git-Bash" class="headerlink" title="安装Git Bash"></a>安装Git Bash</h2><p>　　Windows：到git官网上下载，<a href="https://gitforwindows.org/" target="_blank" rel="noopener">Download git</a> (附链接)。<br>　　安装步骤：双击下载好的.exe文件，一直next就行了，安装完后会有一个Git Bash的命令行工具。<br>　　安装好后：打开Git Bash，键入命令 <font color="red">git –version</font> 来查看一下版本，用来确认是否安装成功。</p><h2 id="安装NodeJs"><a href="#安装NodeJs" class="headerlink" title="安装NodeJs"></a>安装NodeJs</h2><p>　　Windows：到Node.js官网上下载，<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Download NodeJs</a> (附链接)。<br>　　安装步骤：双击下载好.msi文件，也是一路next就行了，最好在Custom Setup这一步选择 <font color="blue">Add to PATH</font> 。<br>　　安装完后：打开命令行，键入命令 <font color="red">node -v</font> 来查看一下版本，用来确认是否安装成功。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>　　前面Git和NodeJs安装好后，就可以安装hexo了。先创建一个文件夹blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键Git Bash打开）。<br>　　键入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>　　安装完成后：键入命令 <font color="red">hexo -v</font> 来查看一下版本，用来确认是否安装成功。</p><p>　　然后初始化hexo，键入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>　　初始化完成后，打开所在的文件夹可以看到以下文件夹等：</p><div class="note no-icon">            <p>　　<em>node_modules: 依赖包<br>　　public：存放生成的页面<br>　　scaffolds：生成文章的一些模板<br>　　source：用来存放你的文章<br>　　themes：主题<br>　　config.yml: 博客的配置文件<br>　　db.json：source解析所得到的<br>　　package.json：项目所需模块项目的配置信息</em></p>          </div><p>　　此时，键入命令打开hexo服务就可以生成博客了。<br>　　输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>　　在浏览器输入localhost:4000就可以看到你生成的博客啦（如果没有也没关系，往下看就行了），可以使用crtl+c把服务关掉。(.ps：不过这只是在本地噢，要想生成线上的，还需要接下来的步骤。)</p><h2 id="生成SSH并添加到github"><a href="#生成SSH并添加到github" class="headerlink" title="生成SSH并添加到github"></a>生成SSH并添加到github</h2><p>　　首先，你先要有一个GitHub账户，没有的话去注册一个吧。注册完登录后，在github.com中鼠标移至『<strong>＋</strong>』看到一个New repository，新建仓库。<br>　　创建一个和你用户名相同的仓库，名称为yourname.github.io, 其中yourname是你的github名称。点击create repository后，回到git bash中，配置github账户信息（YourName和YourEail都替换成你自己的）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "yourname"</span><br><span class="line">git config --global user.email "youremail"</span><br></pre></td></tr></table></figure><p>　　怕自己输错的可以键入命令检查一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>　　确认没错后，创建SSH，一路回车：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "youremail"</span><br></pre></td></tr></table></figure><p>　　然后按输出的路径找到id_rsa.pub文件，一般在C:\Users\user(用户名).ssh目录下。用编辑器打开<strong><font color="red">rsa.pub</font></strong>文件，将里面的内容复制到github<strong><font color="red">设置</font></strong>中的<strong><font color="red">SSH and GPG keys</font></strong>。<br>　　添加一个 New SSH key ，title随便取，key就填刚刚那一段。<br>　　在git bash中验证是否添加成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="部署项目并上传到github"><a href="#部署项目并上传到github" class="headerlink" title="部署项目并上传到github"></a>部署项目并上传到github</h2><p>　　打开你的blog项目，修改_config.yml站点文件的一些配置，YourgithubName就是你的GitHub账户(另外要注意冒号之后都是有一个半角空格的)：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>　　回到gitbash中，进入你的blog目录，安装deploy-git，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>　　然后分别执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><div class="note no-icon">            <p>　　<em>hexo clean清除了你之前生成的东西，也可以不加。<br>　　hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写<br>　　hexo deploy 部署文章，可以用hexo d缩写<br>　　注意deploy时可能要你输入username和password</em></p>          </div><p>　　在浏览器中输入 <em><a href="http://yourgithubname.github.io" target="_blank" rel="noopener">http://yourgithubname.github.io</a></em> 就可以看到你的个人博客啦，是不是很兴奋！<br>　　至此，小站就搭建完成啦，如果不想绑定个人域名的，可以自行跳到『<font color="black"><strong>修改及配置主题</strong></font>』，查看如何进行修改及配置主题。</p><h2 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h2><p>　　第一步，注册阿里云账户，在阿里云上买一个域名，各个后缀的价格不太一样，比如最广泛的.com就较贵。<br>　　第二步，添加CNAME，在项目的source文件夹下新建一个名为CNAME的文件，没有后缀名。在里面添加你购买的域名，比如我添加的是leedv.site，只能添加一个哦。(.ps：可以创建个.txt文件，键入内容后把后缀名删掉。)<br>　　第三步，在阿里云 <font color="red"><strong>域名控制台</strong></font>  中，找到你购买的域名。点 <font color="red"><strong>解析</strong></font> 进去，添加解析(两条)。</p><div class="note no-icon">            <p>　　<em>记录类型均为 <strong>A</strong><br>　　主机类型为 <strong>＠</strong> 以及 <strong>www</strong><br>　　解析线路为 <strong>默认</strong><br>　　记录值为 <strong>自己的博客 ip 地址</strong><br>　　(博客ip地址可通过ping命令获得，在cmd命令行中输入 ping yourgithubname.github.io 即可获得 ip 地址)</em></p>          </div><p>　　第四步，登录GitHub，进入之前创建的仓库，点击settings，设置 Custom domain ，输入你的域名 leedv.site 。<br>　　最后，在gitbash中，分别输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>　　部署完之后，打开浏览器，输入自己的域名，就可以看到搭建的网站博客啦！<br>　　至此，hexo小站搭建完成。</p><h2 id="安装-butterfly-主题"><a href="#安装-butterfly-主题" class="headerlink" title="安装 butterfly 主题"></a>安装 butterfly 主题</h2><p>　　hexo初始化之后默认的主题是landscape，当然，如果想要更换自己喜欢的主题，可以去<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官网</a>挑选，在github中搜索你要的主题名称，里面都会有该主题的如何使用的介绍，按着来就好了，反正就是改改改！我选的是 <font color="red"><strong>butterfly</strong></font> 。<br>　　在博客根目录安装主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><p>　　安装渲染器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-jade hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>　　修改hexo配置文件_config.yml，把主题改为Butterfly</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">Butterfly</span></span><br></pre></td></tr></table></figure><p>　　其余配置请参考主题的<a href="https://docs.jerryc.me/" target="_blank" rel="noopener">配置文档</a>(附链接)，里面很详细，不用担心！(.ps：文档中所说的butterfly.xml其实就是Butterfly文件中的_config.yml，大家放心去用吧 :) )</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>　　卡住了就让卡住吧，休息一会儿你会发现新大陆的。</p>]]></content>
      
      
      <categories>
          
          <category> 小站搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo小站 </tag>
            
            <tag> 小站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
